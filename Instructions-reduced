Knockout must be used to handle the list, filter, and any other information on the page that is subject to changing state.
Note 1: Tracking click events on list items should be handled with Knockout. 
Note 2: Creating your markers as a part of your ViewModel is allowed (and recommended).



Implement a list view of the set of locations defined in step 5.




Provide a filter option that uses an input field to filter both the list view and the map markers displayed by default on load.






Add functionality using third-party APIs to provide information when a map marker or list view entry is clicked AND ANIMATE MARKER. Please provide attribution to the data sources/APIs you use.





Asynchrony and Error Handling. Note that all data APIs used in the project should load asynchronously and errors should be handled gracefully.  Some JavaScript libraries provide special methods to handle errors. For example: refer to .fail() method discussed here if you use jQuery's ajax() method.